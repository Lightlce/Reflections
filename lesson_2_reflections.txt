What happens when you initialize a repository? Why do you need to do it?

A .git directory is creator. This enables us to begin making commits

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The Staging Area is an intermediary stage where the files are waiting to be committed.
Perhaps it is useful to make commits in one batch rather than per file.
Also, it let's you double check your work before making the commit.
Lastly, it lets you save the file in the state you want. When you edit the file again,
the changes are already saved in the state in the staging area. Only the file
from the working directory will change.

How can you use the staging area to make sure you have one commit per logical change?

You can do so by Making the change in the working directory. Saving it.
Add the modified file into the staging area using "git add"
If you want to continue working on the next feature. You can do so. The staging
area has not changed.

Remember to double check the difference between the files though.
Use "git diff" to compare Working repository vs Staging area
"git diff --staged" to compare Staging area from commit 1

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When you are trying out experimental features
making the app in other languages or marking points of the main branch that is
the most stable version before making further improvements etc.
e.g. "git branch backup"

How do the diagrams help you visualize the branch structure?

You can track down the structure by looking at the parents of each commit.
It reminds us where the different branches are and shows us the reach of each
branch.
